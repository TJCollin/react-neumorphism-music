{"version":3,"sources":["pages/Recommend/store/actionTypes.ts","components/Player/store/actions.ts","apis/axiosInstance.ts","apis/config.ts","apis/requests/recommend.ts","apis/url.ts","pages/Recommend/store/actions.ts","store/actionTypes.ts","pages/Recommend/store/reducer.ts","components/Player/store/reducer.ts","components/Player/store/actionTypes.ts","App.module.scss","router/index.tsx","store/reducer.ts","store/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SET_RECOMMEND_LIST","SET_RECOMMEND_SONGS","changeCurrentSongAction","payload","type","SET_CURRENT_SONG","changeCurrentIndexAction","SET_CURRENT_INDEX","changeSongListAction","SET_SONG_LIST","changePlayStatusAction","SET_PLAY_STATUS","changeShowSongListAction","SET_SHOW_SONG_LIST","deleteSongAction","DELETE_SONG","axiosInstance","axios","create","baseURL","timeout","interceptors","response","use","res","status","data","code","Promise","resolve","reject","error","console","log","axiosGet","url","params","get","getRecommendNewSongsRequest","a","result","map","item","id","name","album","song","singers","artists","dt","duration","changeRecommendList","changeRecommendSongs","getRecommendListAction","dispatch","limit","getRecommendSongsAcrion","dispath","TOGGLE_TOAST","produce","state","action","recommendList","recommendSongs","loading","currentSong","currentIndex","playStatus","songList","showSongList","index","splice","deleteSongFromPlayList","module","exports","routes","component","lazy","path","exact","render","to","key","show","showToast","toastText","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","recommend","recommendReducer","toast","toastReducer","player","playerReducer","store","createStore","applyMiddleware","thunk","App","className","style","fallback","renderRoutes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2651740c.chunk.js","sourcesContent":["export const SET_RECOMMEND_LIST: string = \"SET_RECOMMEND_LIST\";\nexport const SET_RECOMMEND_SONGS: string = \"SET_RECOMMEND_SONGS\";\n","import { Song } from \"../../../typings\";\nimport {\n  DELETE_SONG,\n  SET_CURRENT_INDEX,\n  SET_CURRENT_SONG,\n  SET_PLAY_STATUS,\n  SET_SHOW_SONG_LIST,\n  SET_SONG_LIST,\n} from \"./actionTypes\";\n\nexport const changeCurrentSongAction = (payload: Song) => {\n  return {\n    type: SET_CURRENT_SONG,\n    payload,\n  };\n};\n\nexport const changeCurrentIndexAction = (payload: number) => {\n  return {\n    type: SET_CURRENT_INDEX,\n    payload,\n  };\n};\n\nexport const changeSongListAction = (payload: Song[]) => {\n  return {\n    type: SET_SONG_LIST,\n    payload,\n  };\n};\n\nexport const changePlayStatusAction = (payload: boolean) => {\n  return {\n    type: SET_PLAY_STATUS,\n    payload,\n  };\n};\n\nexport const changeShowSongListAction = (payload: boolean) => {\n  return {\n    type: SET_SHOW_SONG_LIST,\n    payload,\n  };\n};\n\nexport const deleteSongAction = (payload: number) => {\n  return {\n    type: DELETE_SONG,\n    payload,\n  };\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\n\nimport { BASE_URL, TIME_OUT, errorHandle } from \"./config\";\n\ninterface IResponseData {\n  code: number;\n  total?: number;\n  [key: string]: any;\n}\n\n// 创建axios实例\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  timeout: TIME_OUT,\n});\n\n// 响应拦截\naxiosInstance.interceptors.response.use(\n  (res: AxiosResponse) => {\n    if (res.status === 200) {\n      const code: number = res.data.code;\n      if (code === 200) {\n        return Promise.resolve(res.data);\n      }\n    }\n    return Promise.reject(res.data);\n  },\n  (error: AxiosError) => {\n    if (error && error.response) {\n      // 请求已发出，但是不在2xx的范围\n      errorHandle(error.response.status);\n      return Promise.reject(error.response);\n    } else {\n      console.log(\"网络请求失败, 请刷新重试\");\n      return Promise.reject(error);\n    }\n  }\n);\n\nconst axiosGet = (url: string, params?: any): Promise<IResponseData> =>\n  axiosInstance.get(url, { params });\nconst axiosPost = (url: string, params?: any): Promise<IResponseData> =>\n  axiosInstance.post(url, params);\n\nexport { axiosGet, axiosPost };\n\nexport default axiosInstance;\n","const BASE_URL: string = \"https://collin-netease-cloud-music-api.vercel.app/\";\n\nconst TIME_OUT: number = 1000 * 10;\n\n/**\n * 请求失败后的错误统一处理\n * @param status 状态码\n */\nconst errorHandle = (status: number): void => {\n  // HTTP状态码判断\n  if (status >= 500) {\n    console.log(\"系统开小差了, 请联系技术管理员或稍后重试\");\n  } else {\n    console.log(\"网络请求失败, 请刷新重试\");\n  }\n};\n\nexport { BASE_URL, TIME_OUT, errorHandle };\n","import { axiosGet } from \"../axiosInstance\";\nimport {\n  GET_BANNERS,\n  GET_RECOMMEND_LIST,\n  GET_RECOMMEND_NEW_SONGS,\n} from \"../url\";\n\n/**\n * 请求banner数据\n * @param type\n */\nconst getBannersRequest = (type: number) => {\n  return axiosGet(GET_BANNERS, { type });\n};\n\n/**\n * 请求推荐歌单数据\n * @param limit 取出数量\n */\nconst getRecommendListRequest = (limit: number) => {\n  return axiosGet(GET_RECOMMEND_LIST, { limit });\n};\n\n/**\n * 请求推荐新歌数据\n */\nconst getRecommendNewSongsRequest = async () => {\n  const { result } = await axiosGet(GET_RECOMMEND_NEW_SONGS);\n  return result.map((item: any) => {\n    return {\n      id: item.id,\n      name: item.name,\n      album: item.song.album,\n      singers: item.song.artists,\n      dt: item.song.duration,\n    };\n  });\n};\n\nexport {\n  getBannersRequest,\n  getRecommendListRequest,\n  getRecommendNewSongsRequest,\n};\n","/**\n * @description 接口地址统一管理\n */\n\n/**\n * 推荐相关\n */\nexport const GET_BANNERS: string = '/banner'; // banner\nexport const GET_RECOMMEND_LIST: string = '/personalized'; // 推荐歌单\nexport const GET_RECOMMEND_NEW_SONGS: string = '/personalized/newsong'; // 推荐新歌\n\n/**\n * 排行榜相关\n */\nexport const GET_RANK_LIST: string = '/toplist/detail'; // 榜单列表\n\n/**\n * 歌手相关\n */\nexport const GET_SINGER_LIST: string = '/artist/list'; // 歌手列表\nexport const GET_SINGER_DETAIL_AND_HOT_SONGS: string = '/artists'; // 歌手信息和热门歌曲\n\n/**\n * 歌单相关\n */\nexport const GET_ALBUM_DETAIL_BY_ID: string = '/playlist/detail'; // 歌单详情\n\n/**\n * 搜索相关\n */\nexport const GET_HOT_KEYWORDS_LIST: string = '/search/hot'; // 热门搜索关键词\nexport const GET_SEARCH_LIST_BY_KEYWORDS: string = '/search'; // 搜索\nexport const GET_SEARCH_SUGGEST_BY_KEYWORDS: string = '/search/suggest'; // 搜索建议\n\n/**\n * 歌曲相关\n */\nexport const GET_LYRIC: string = '/lyric'; // 歌词\n","import { Dispatch } from \"redux\";\nimport {\n  getRecommendListRequest,\n  getRecommendNewSongsRequest,\n} from \"../../../apis/requests/recommend\";\nimport { Recomm, Song } from \"../../../typings\";\nimport { SET_RECOMMEND_LIST, SET_RECOMMEND_SONGS } from \"./actionTypes\";\n\nexport const changeRecommendList = (payload: Recomm[]) => {\n  return {\n    type: SET_RECOMMEND_LIST,\n    payload,\n  };\n};\n\nexport const changeRecommendSongs = (payload: Song[]) => {\n  return {\n    type: SET_RECOMMEND_SONGS,\n    payload,\n  };\n};\n\nexport const getRecommendListAction = (type: number) => {\n  return async (dispatch: Dispatch) => {\n    const res: any = await getRecommendListRequest(type);\n    dispatch(changeRecommendList(res.result));\n  };\n};\n\nexport const getRecommendSongsAcrion = () => {\n  return async (dispath: Dispatch) => {\n    const res: any = await getRecommendNewSongsRequest();\n    dispath(changeRecommendSongs(res));\n  };\n};\n","export const TOGGLE_TOAST = \"TOGGLE_TOAST\";\n","import { IAction, Recomm, Song } from \"../../../typings\";\nimport { produce } from \"immer\";\nimport { SET_RECOMMEND_LIST, SET_RECOMMEND_SONGS } from \"./actionTypes\";\nexport interface RecommmendState {\n  recommendList: Recomm[];\n  recommendSongs: Song[];\n  loading: boolean;\n}\n\nexport interface RecommAction extends IAction {\n  payload: Recomm[] | Song[] | boolean;\n}\n\nconst initialState: RecommmendState = {\n  recommendList: [],\n  recommendSongs: [],\n  loading: true,\n};\n\nexport default produce((state: RecommmendState, action: RecommAction) => {\n  switch (action.type) {\n    case SET_RECOMMEND_LIST:\n      state.recommendList = action.payload as Recomm[];\n      break;\n    case SET_RECOMMEND_SONGS:\n      state.recommendSongs = action.payload as Song[];\n      state.loading = false;\n      break;\n    default:\n      break;\n  }\n}, initialState);\n","import { stat } from \"fs\";\nimport produce from \"immer\";\nimport { IAction, Song } from \"../../../typings\";\nimport {\n  DELETE_SONG,\n  SET_CURRENT_INDEX,\n  SET_CURRENT_SONG,\n  SET_PLAY_STATUS,\n  SET_SHOW_SONG_LIST,\n  SET_SONG_LIST,\n} from \"./actionTypes\";\n\nexport interface PlayerState {\n  currentSong: Song | null;\n  songList: Song[];\n  currentIndex: number;\n  playStatus: boolean;\n  showSongList: boolean;\n}\n\nexport interface PlayerAction extends IAction {\n  payload: Song | Song[] | number | boolean;\n}\n\nconst initState: PlayerState = {\n  currentSong: null,\n  songList: [],\n  currentIndex: -1,\n  playStatus: true,\n  showSongList: false,\n};\n\n/**\n * 删除指定歌曲\n * @param state\n * @param index\n */\nconst deleteSongFromPlayList = (state: PlayerState, index: number): void => {\n  const { songList, currentIndex } = state;\n\n  songList.splice(index, 1);\n  if (index <= currentIndex) {\n    state.currentIndex = state.currentIndex === 0 ? 0 : state.currentIndex--;\n  }\n};\n\nexport default produce((state: PlayerState, action: PlayerAction) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_CURRENT_SONG:\n      state.currentSong = payload as Song;\n      break;\n    case SET_CURRENT_INDEX:\n      state.currentIndex = payload as number;\n      state.playStatus = true;\n\n      break;\n    case SET_SONG_LIST:\n      state.songList = payload as Song[];\n      break;\n    case SET_SHOW_SONG_LIST:\n      state.showSongList = payload as boolean;\n      break;\n    case SET_PLAY_STATUS:\n      state.playStatus = payload as boolean;\n      break;\n    case DELETE_SONG:\n      deleteSongFromPlayList(state, action.payload as number);\n      break;\n    default:\n      break;\n  }\n}, initState);\n","export const SET_CURRENT_SONG: string = \"SET_CURRENT_SONG\";\n\nexport const SET_CURRENT_INDEX: string = \"SET_CURRENT_INDEX\";\n\nexport const SET_SONG_LIST: string = \"SET_SONG_LIST\";\nexport const SET_PLAY_STATUS: string = \"SET_PLAY_STATUS\";\nexport const SET_SHOW_SONG_LIST: string = \"SET_SHOW_SONG_LIST\";\n// 删除歌曲\nexport const DELETE_SONG: string = \"DELETE_SONG\";\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\"};","import React, { lazy } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst HomeLayout = lazy(() => import(\"../layouts/HomeLayout\"));\nconst Recommend = lazy(() => import(\"../pages/Recommend\"));\nconst Singers = lazy(() => import(\"../pages/Singers\"));\nconst Rank = lazy(() => import(\"../pages/Rank\"));\n\nconst routes = [\n  {\n    component: HomeLayout,\n    routes: [\n      {\n        path: \"/\",\n        exact: true,\n        render: () => {\n          return <Redirect to={\"/recommend\"}></Redirect>;\n        },\n      },\n      {\n        path: \"/recommend\",\n        key: \"recommend\",\n        component: Recommend,\n      },\n      {\n        path: \"/singers\",\n        key: \"singers\",\n        component: Singers,\n      },\n      {\n        path: \"/rank\",\n        key: \"rank\",\n        component: Rank,\n      },\n    ],\n  },\n];\n\nexport default routes;\n","import { stat } from \"fs\";\nimport { produce } from \"immer\";\nimport { StoreState } from \".\";\nimport { IAction } from \"../typings\";\nimport { TOGGLE_TOAST } from \"./actionTypes\";\n\nexport interface ToastAction extends IAction {\n  show: boolean;\n  payload?: \"string\";\n}\n\nexport interface ToastState {\n  showToast: boolean;\n  toastText?: string;\n}\n\nconst initialState: ToastState = {\n  showToast: false,\n  toastText: \"\",\n};\n\nexport default produce((state: ToastState, action: ToastAction) => {\n  switch (action.type) {\n    case TOGGLE_TOAST:\n      if (action.show) {\n        state.showToast = true;\n        state.toastText = action.payload as string;\n      } else {\n        state.showToast = false;\n      }\n      break;\n\n    default:\n      break;\n  }\n}, initialState);\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport { reducer as recommendReducer } from \"../pages/Recommend/store\";\nimport thunk from \"redux-thunk\";\nimport { RecommmendState } from \"../pages/Recommend/store/reducer\";\nimport toastReducer, { ToastState } from \"./reducer\";\nimport { PlayerState } from \"../components/Player/store/reducer\";\nimport { reducer as playerReducer } from \"../components/Player/store\";\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport interface StoreState {\n  recommend: RecommmendState;\n  toast: ToastState;\n  player: PlayerState;\n}\n\nconst reducers = combineReducers({\n  recommend: recommendReducer,\n  toast: toastReducer,\n  player: playerReducer,\n});\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React, { Suspense } from \"react\";\nimport HomeLayout from \"./layouts/HomeLayout\";\nimport style from \"./App.module.scss\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { renderRoutes } from \"react-router-config\";\nimport routes from \"./router\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className={style[\"App\"]}>\n        <BrowserRouter>\n          <Suspense fallback={null}>{renderRoutes(routes)}</Suspense>\n        </BrowserRouter>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/variable.scss\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/index.scss\";\n\nimport \"collin-ui/dist/index.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}