{"version":3,"sources":["store/actions.ts","components/Header/index.module.scss","components/NavTabs/index.module.scss","components/Player/FullscreenPlayer/index.module.scss","components/Player/FullscreenPlayer/CD/index.module.scss","components/Player/FullscreenPlayer/Controller/index.module.scss","components/Player/MiniPlayer/index.module.scss","components/Player/SongList/index.module.scss","components/Toast/index.module.scss","components/Header/index.tsx","components/NavTabs/index.tsx","components/Player/FullscreenPlayer/CD/index.tsx","components/Player/FullscreenPlayer/Controller/index.tsx","components/Player/FullscreenPlayer/index.tsx","components/Player/MiniPlayer/index.tsx","components/Player/SongList/index.tsx","components/Player/index.tsx","components/Toast/index.tsx","layouts/HomeLayout/index.tsx","assets/images/music.png","components/Scroll/index.tsx","components/Scroll/index.module.scss","utils/format.ts"],"names":["toggleToastAction","show","payload","type","TOGGLE_TOAST","module","exports","Header","dispatch","useDispatch","handleClick","className","styles","onClick","icon","memo","NavTabs","props","to","activeClassName","CD","curSong","status","classNames","debounce","placeholder","src","require","default","alt","width","height","album","picUrl","Controller","percent","curIdx","onProgressChange","useState","barWidth","setBarWidth","barRef","useRef","x","moved","touchInfo","setTouchInfo","useEffect","current","clientWidth","ref","e","stopPropagation","offsetLeft","curPercent","pageX","onTouchMove","touches","onTouchEnd","changeCurrentIndexAction","size","changePlayStatusAction","changeShowSongListAction","FullscreenPlayer","fullscreen","CSSTransition","timeout","in","unmountOnExit","changeFullscreenAction","name","formatSingerName","singers","MiniPlayer","song","playStatus","undefined","map","item","join","console","log","SongList","songList","index","canTouch","setCanTouch","handleScroll","useCallback","pos","y","startY","distance","initialed","listRef","setShow","onEnterCB","style","onEnteringCB","onExitCB","onExitingCB","onExitedCB","appear","onEnter","onEntering","onExit","onExiting","onExited","onTouchStart","nativeEvent","pageY","dis","transform","transition","Scroll","onScroll","idx","btnType","deleteSongAction","handleDeleteClick","id","Player","useSelector","state","player","currentIndex","showSongList","fullScreen","setCurSong","currentTime","setCurrentTime","duration","setDuration","setPercent","handleProgressChange","newTime","audioRef","length","newSong","preSong","dt","audioDom","formatSongUrl","play","pause","autoPlay","onTimeUpdate","target","per","isNaN","onEnded","Toast","showToast","toast","toastText","hideToast","timer","setTimeout","clearTimeout","Number","title","onClose","HomeLayout","route","renderRoutes","routes","forwardRef","direction","click","children","bounceTop","bounceBottom","bounceLeft","bounceRight","pullDownLoading","pullUpLoading","restProps","onPullDown","onPullUp","bScroll","setBScroll","scrollRef","scroll","BScroll","probeType","scrollX","scrollY","tap","bounce","top","bottom","left","right","useImperativeHandle","refresh","scrollTo","getBScroll","on","off","singerList"],"mappings":"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","file":"static/js/5.c40a7e9a.chunk.js","sourcesContent":["import { TOGGLE_TOAST } from \"./actionTypes\";\r\n\r\nexport const toggleToastAction = (\r\n  show: boolean,\r\n  payload: string = \"暂未开发\"\r\n) => {\r\n  return {\r\n    type: TOGGLE_TOAST,\r\n    payload: payload,\r\n    show: show,\r\n  };\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1eJ9g\",\"title\":\"Header_title__1xM3O\",\"menu\":\"Header_menu__1T83F\",\"search\":\"Header_search__2Cfbn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-tabs\":\"NavTabs_nav-tabs__2ZI7e\",\"actived\":\"NavTabs_actived__ktnLY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullscreen-player\":\"FullscreenPlayer_fullscreen-player__2tqtV\",\"top\":\"FullscreenPlayer_top__1Jgzg\",\"back\":\"FullscreenPlayer_back__3J066\",\"song-info\":\"FullscreenPlayer_song-info__1IM76\",\"song-name\":\"FullscreenPlayer_song-name__5RGjA\",\"singer-name\":\"FullscreenPlayer_singer-name__2yK4x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cd\":\"CD_cd__3wazE\",\"spin\":\"CD_spin__wfcO7\",\"img-card\":\"CD_img-card__2qxvh\",\"pause\":\"CD_pause__2Ebi7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controller\":\"Controller_controller__2JFWq\",\"button-group\":\"Controller_button-group__4FMxt\",\"control-button\":\"Controller_control-button__jJSIj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mini-player\":\"MiniPlayer_mini-player__2f86i\",\"img-wrap\":\"MiniPlayer_img-wrap__2OcFG\",\"spin\":\"MiniPlayer_spin__2D8x_\",\"pause\":\"MiniPlayer_pause___OBpb\",\"text\":\"MiniPlayer_text__kHFgD\",\"name\":\"MiniPlayer_name__1Sl9p\",\"singer\":\"MiniPlayer_singer__3mrts\",\"control\":\"MiniPlayer_control__V4LDz\",\"control-button\":\"MiniPlayer_control-button__1D6Aw\",\"control-list\":\"MiniPlayer_control-list__3en4k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"song-list\":\"SongList_song-list__2yZQX\",\"mask\":\"SongList_mask__NmgQg\",\"list-wrap\":\"SongList_list-wrap__2x6uJ\",\"list-header\":\"SongList_list-header__3yKI2\",\"list-scroll-wrap\":\"SongList_list-scroll-wrap__37tlS\",\"song-item\":\"SongList_song-item__pP44a\",\"delete\":\"SongList_delete__16VSv\",\"active\":\"SongList_active__3UgwG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toast\":\"Toast_toast__U5vZg\"};","import React, { FC, memo } from \"react\";\r\nimport styles from \"./index.module.scss\";\r\nimport { Button, Icon } from \"collin-ui\";\r\nimport { toggleToastAction } from \"../../store/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const handleClick = () => {\r\n    dispatch(toggleToastAction(true, \"功能暂未开发哟\"));\r\n  };\r\n\r\n  return (\r\n    <header className={styles[\"header\"]}>\r\n      <Button className={styles[\"menu\"]} onClick={handleClick}>\r\n        <Icon icon=\"list\"></Icon>\r\n      </Button>\r\n      <Button className={styles[\"search\"]} onClick={handleClick}>\r\n        <Icon icon=\"search\"></Icon>\r\n      </Button>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default memo(Header);\r\n","import React, { FC, memo } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst NavTabs: FC = (props) => {\r\n  return (\r\n    <div className={styles[\"nav-tabs\"]}>\r\n      <NavLink to=\"/recommend\" activeClassName={styles[\"actived\"]}>\r\n        <span>推荐</span>\r\n      </NavLink>\r\n      <NavLink to=\"/singers\" activeClassName={styles[\"actived\"]}>\r\n        <span>歌手</span>\r\n      </NavLink>\r\n      <NavLink to=\"/rank\" activeClassName={styles[\"actived\"]}>\r\n        <span>排行榜</span>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(NavTabs);\r\n","import React, { FC } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./index.module.scss\";\r\nimport { Card, CardContent } from \"collin-ui\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport { Song } from \"../../../../typings\";\r\nimport { memo } from \"react\";\r\n\r\nexport interface CDProps {\r\n  curSong: Song;\r\n  status: boolean;\r\n}\r\n\r\nconst CD: FC<CDProps> = ({ curSong, status }) => {\r\n  return (\r\n    <div className={classNames(styles[\"cd\"], !status && styles[\"pause\"])}>\r\n      <Card className={styles[\"img-card\"]}>\r\n        <CardContent>\r\n          <LazyLoad\r\n            debounce={500}\r\n            placeholder={\r\n              <img\r\n                src={require(\"../../../../assets/images/music.png\").default}\r\n                alt=\"music\"\r\n                width=\"50\"\r\n                height=\"100%\"\r\n                className={styles[\"img\"]}\r\n              />\r\n            }\r\n          >\r\n            <img src={curSong.album.picUrl} alt=\"\" />\r\n          </LazyLoad>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(CD);\r\n","import { Button, Icon, ProgressBar } from \"collin-ui\";\r\nimport React, { FC, useEffect, useState, MouseEvent, TouchEvent } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { memo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { handleProgressChange } from \"../..\";\r\nimport { toggleToastAction } from \"../../../../store/actions\";\r\nimport {\r\n  changeCurrentIndexAction,\r\n  changePlayStatusAction,\r\n  changeShowSongListAction,\r\n} from \"../../store/actions\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nexport interface ControllerProps {\r\n  percent: number;\r\n  curIdx: number;\r\n  status: boolean;\r\n  onProgressChange: handleProgressChange;\r\n}\r\n\r\nconst Controller: FC<ControllerProps> = ({\r\n  percent,\r\n  curIdx,\r\n  status,\r\n  onProgressChange,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [barWidth, setBarWidth] = useState<number>(0);\r\n  const barRef = useRef<HTMLDivElement>(null);\r\n  const [touchInfo, setTouchInfo] = useState({\r\n    x: 0,\r\n    moved: false,\r\n  });\r\n\r\n  /**\r\n   * 获取进度条容器的物理宽度并保存\r\n   */\r\n  useEffect((): void => {\r\n    setBarWidth(barRef.current!.clientWidth);\r\n  }, []);\r\n  /**\r\n   * 显示列表\r\n   */\r\n  const handleListButtonClick = () => {\r\n    dispatch(changeShowSongListAction(true));\r\n  };\r\n  /**\r\n   * 播放键\r\n   */\r\n  const handlePlayButtonClick = () => {\r\n    dispatch(changePlayStatusAction(!status));\r\n  };\r\n  /**\r\n   * 切换循环\r\n   */\r\n  const handleRecycleClick = () => {\r\n    dispatch(toggleToastAction(true, \"功能暂未开发~\"));\r\n  };\r\n  /**\r\n   * 点击下一首\r\n   */\r\n  const handleNextClick = () => {\r\n    dispatch(changeCurrentIndexAction(curIdx + 1));\r\n  };\r\n  /**\r\n   * 点击前一首\r\n   */\r\n  const handlePreClick = () => {\r\n    dispatch(changeCurrentIndexAction(curIdx - 1));\r\n  };\r\n  /**\r\n   * 进度条点击\r\n   */\r\n  const handleBarClick = (e: MouseEvent) => {\r\n    e.stopPropagation();\r\n    const offsetLeft: number = barRef.current!.offsetLeft,\r\n      curPercent: number = (e.pageX - offsetLeft) / barWidth;\r\n    onProgressChange(curPercent);\r\n  };\r\n  /**\r\n   * 进度条拖动\r\n   */\r\n  const handleTouchMove = (e: TouchEvent) => {\r\n    setTouchInfo({ x: e.touches[0].pageX, moved: true });\r\n  };\r\n  /**\r\n   * 进度条拖动结束\r\n   */\r\n\r\n  const handleTouchEnd = () => {\r\n    if (!touchInfo.moved) return;\r\n    const offsetLeft: number = barRef.current!.offsetLeft,\r\n      curPercent: number = (touchInfo.x - offsetLeft) / barWidth;\r\n    onProgressChange(curPercent);\r\n    setTouchInfo({ x: 0, moved: false });\r\n  };\r\n\r\n  return (\r\n    <div className={styles[\"controller\"]}>\r\n      <ProgressBar\r\n        percent={percent}\r\n        ref={barRef}\r\n        onClick={handleBarClick}\r\n        onTouchMove={handleTouchMove}\r\n        onTouchEnd={handleTouchEnd}\r\n      ></ProgressBar>\r\n      <div className={styles[\"button-group\"]}>\r\n        <Button\r\n          className={styles[\"control-button\"]}\r\n          onClick={handleRecycleClick}\r\n        >\r\n          <Icon icon=\"sync\"></Icon>\r\n        </Button>\r\n        <Button className={styles[\"control-button\"]} onClick={handlePreClick}>\r\n          <Icon icon=\"backward\"></Icon>\r\n        </Button>\r\n        <Button\r\n          size=\"lg\"\r\n          className={styles[\"control-button\"]}\r\n          onClick={handlePlayButtonClick}\r\n        >\r\n          <Icon icon={status ? \"pause\" : \"play\"}></Icon>\r\n        </Button>\r\n        <Button className={styles[\"control-button\"]} onClick={handleNextClick}>\r\n          <Icon icon=\"forward\"></Icon>\r\n        </Button>\r\n        <Button className={styles[\"control-button\"]}>\r\n          <Icon icon=\"list-ul\" onClick={handleListButtonClick}></Icon>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Controller);\r\n","import { Icon } from \"collin-ui\";\r\nimport { FC, memo, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { Song } from \"../../../typings\";\r\nimport { formatSingerName } from \"../../../utils/format\";\r\nimport { changeFullscreenAction } from \"../store/actions\";\r\nimport styles from \"./index.module.scss\";\r\nimport CD from \"./CD\";\r\nimport Controller from \"./Controller\";\r\nimport { handleProgressChange } from \"..\";\r\n\r\nexport interface FullscreenPlayerProps {\r\n  fullscreen: boolean;\r\n  curSong: Song;\r\n  status: boolean;\r\n  curIdx: number;\r\n  percent: number;\r\n  onProgressChange: handleProgressChange;\r\n}\r\n\r\nconst FullscreenPlayer: FC<FullscreenPlayerProps> = ({\r\n  fullscreen,\r\n  curSong,\r\n  curIdx,\r\n  status,\r\n  percent,\r\n  onProgressChange,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const handleToggleFullscreen = () => {\r\n    dispatch(changeFullscreenAction(false));\r\n  };\r\n\r\n  return (\r\n    <CSSTransition\r\n      classNames=\"full\"\r\n      timeout={500}\r\n      in={fullscreen}\r\n      unmountOnExit\r\n    >\r\n      <div className={styles[\"fullscreen-player\"]}>\r\n        <div className={styles[\"top\"]}>\r\n          <div className={styles[\"back\"]} onClick={handleToggleFullscreen}>\r\n            <Icon icon=\"chevron-down\"></Icon>\r\n          </div>\r\n          <div className={styles[\"song-info\"]}>\r\n            <p className={styles[\"song-name\"]}>{curSong.name}</p>\r\n            <p className={styles[\"singer-name\"]}>\r\n              {formatSingerName(curSong.singers)}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <CD curSong={curSong} status={status}></CD>\r\n        <Controller\r\n          percent={percent}\r\n          status={status}\r\n          curIdx={curIdx}\r\n          onProgressChange={onProgressChange}\r\n        ></Controller>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default memo(FullscreenPlayer);\r\n","import { Button, Icon } from \"collin-ui\";\r\nimport React, {\r\n  FC,\r\n  memo,\r\n  MouseEvent,\r\n  MouseEventHandler,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { StoreState } from \"../../../store\";\r\nimport { Song } from \"../../../typings\";\r\nimport {\r\n  changePlayStatusAction,\r\n  changeShowSongListAction,\r\n  changeFullscreenAction,\r\n} from \"../store/actions\";\r\nimport styles from \"./index.module.scss\";\r\nimport classNames from \"classnames\";\r\n\r\nexport interface MiniPlayerProps {\r\n  playStatus: boolean;\r\n  song?: Song;\r\n}\r\n\r\nconst MiniPlayer: FC<MiniPlayerProps> = (props) => {\r\n  const { song, playStatus } = props;\r\n  const dispatch = useDispatch();\r\n  const handlePlayButtonClick = (e: MouseEvent<HTMLButtonElement>) => {\r\n    e.stopPropagation();\r\n    console.log(\"play\", !playStatus);\r\n    dispatch(changePlayStatusAction(!playStatus));\r\n  };\r\n\r\n  const handleListButtonClick = (e: MouseEvent<HTMLButtonElement>) => {\r\n    e.stopPropagation();\r\n    dispatch(changeShowSongListAction(true));\r\n  };\r\n\r\n  const handlePlayerClick = (e: MouseEvent<HTMLDivElement>) => {\r\n    e.stopPropagation();\r\n    dispatch(changeFullscreenAction(true));\r\n  };\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={song !== undefined}\r\n      timeout={400}\r\n      classNames=\"mini\"\r\n      unmountOnExit\r\n    >\r\n      <div className={styles[\"mini-player\"]} onClick={handlePlayerClick}>\r\n        <div\r\n          className={classNames(\r\n            styles[\"img-wrap\"],\r\n            !playStatus && styles[\"pause\"]\r\n          )}\r\n        >\r\n          <img\r\n            src={song?.album.picUrl + \"?param=100y100\"}\r\n            width=\"40\"\r\n            height=\"40\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className={styles[\"text\"]}>\r\n          <p className={styles[\"name\"]}>{song?.name}</p>\r\n          <p className={styles[\"singer\"]}>\r\n            {song?.singers.map((item) => item.name).join(\" / \")}\r\n          </p>\r\n        </div>\r\n        <div className={styles[\"control\"]}>\r\n          <Button\r\n            className={styles[\"control-button\"]}\r\n            onClick={handlePlayButtonClick}\r\n          >\r\n            <Icon icon={playStatus ? \"pause\" : \"play\"} />\r\n          </Button>\r\n          <Button\r\n            className={styles[\"control-list\"]}\r\n            onClick={handleListButtonClick}\r\n          >\r\n            <Icon icon=\"list-ul\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default memo(MiniPlayer);\r\n","import React, {\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useState,\r\n  TouchEvent,\r\n  MouseEvent,\r\n  useRef,\r\n} from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { Song } from \"../../../typings\";\r\nimport styles from \"./index.module.scss\";\r\nimport Scroll, { Position } from \"../../Scroll\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeShowSongListAction, deleteSongAction } from \"../store/actions\";\r\nimport { Button, Icon } from \"collin-ui\";\r\nimport { formatSingerName } from \"../../../utils/format\";\r\nimport classNames from \"classnames\";\r\n\r\nexport interface SongListProps {\r\n  songList: Song[];\r\n  index: number;\r\n}\r\n\r\nconst SongList: FC<SongListProps> = (props) => {\r\n  const { songList, index } = props;\r\n  const [canTouch, setCanTouch] = useState(true);\r\n  const handleScroll = useCallback((pos: Position) => {\r\n    setCanTouch(pos.y === 0);\r\n  }, []);\r\n  const [touchInfo, setTouchInfo] = useState({\r\n    startY: 0,\r\n    distance: 0,\r\n    // initial 用于区分是点击还是touch时间\r\n    initialed: false,\r\n  });\r\n  const listRef = useRef<HTMLDivElement>(null);\r\n  const handleTouchStart = (e: TouchEvent) => {\r\n    if (!canTouch || touchInfo.initialed) {\r\n      return;\r\n    }\r\n    listRef.current!.style[\"transition\"] = \"\";\r\n\r\n    setTouchInfo({\r\n      startY: e.nativeEvent.touches[0].pageY,\r\n      distance: 0,\r\n      initialed: true,\r\n    });\r\n  };\r\n  const handleTouchMove = (e: TouchEvent) => {\r\n    if (!canTouch || !touchInfo.initialed) {\r\n      return;\r\n    }\r\n    const dis = e.nativeEvent.touches[0].pageY - touchInfo.startY;\r\n    if (dis < 0) {\r\n      return;\r\n    }\r\n    setTouchInfo({ ...touchInfo, distance: dis });\r\n    listRef.current!.style.transform = `translate3d(0, ${dis}px, 0)`;\r\n  };\r\n  const [show, setShow] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTouchEnd = (e: TouchEvent) => {\r\n    console.log(canTouch);\r\n    if (!canTouch || !touchInfo.initialed) {\r\n      return;\r\n    }\r\n    if (touchInfo.distance > 150) {\r\n      listRef.current!.style.transition = `all .3s`;\r\n      setShow(false);\r\n    } else {\r\n      setTouchInfo({ startY: 0, distance: 0, initialed: false });\r\n      listRef.current!.style.transition = `all .3s`;\r\n      listRef.current!.style.transform = `translate3d(0, 0, 0)`;\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = (e: MouseEvent, idx: number) => {\r\n    setCanTouch(false);\r\n    e.stopPropagation();\r\n    dispatch(deleteSongAction(idx));\r\n  };\r\n\r\n  const onEnterCB = useCallback(() => {\r\n    listRef.current!.style[\"transform\"] = `translate3d(0, 100%, 0)`;\r\n  }, []);\r\n\r\n  const onEnteringCB = useCallback(() => {\r\n    listRef.current!.style[\"transition\"] = \"all 0.3s\";\r\n    listRef.current!.style[\"transform\"] = `translate3d(0, 0, 0)`;\r\n  }, []);\r\n\r\n  const onExitCB = useCallback(() => {\r\n    listRef.current!.style[\r\n      \"transform\"\r\n    ] = `translate3d(0, ${touchInfo.distance}px, 0)`;\r\n  }, [touchInfo.distance]);\r\n\r\n  const onExitingCB = useCallback(() => {\r\n    listRef.current!.style[\"transition\"] = \"all 0.3s\";\r\n    listRef.current!.style[\"transform\"] = `translate3d(0px, 100%, 0px)`;\r\n  }, []);\r\n\r\n  const onExitedCB = useCallback(() => {\r\n    listRef.current!.style[\"transform\"] = `translate3d(0px, 100%, 0px)`;\r\n    dispatch(changeShowSongListAction(false));\r\n  }, []);\r\n\r\n  return (\r\n    <CSSTransition\r\n      timeout={500}\r\n      in={show}\r\n      appear\r\n      classNames=\"move\"\r\n      onEnter={onEnterCB}\r\n      onEntering={onEnteringCB}\r\n      onExit={onExitCB}\r\n      onExiting={onExitingCB}\r\n      onExited={onExitedCB}\r\n    >\r\n      <div\r\n        className={styles[\"song-list\"]}\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <div\r\n          className={styles[\"mask\"]}\r\n          onClick={() => {\r\n            setShow(false);\r\n          }}\r\n        ></div>\r\n        <div\r\n          className={styles[\"list-wrap\"]}\r\n          ref={listRef}\r\n          onTouchStart={handleTouchStart}\r\n          onTouchMove={handleTouchMove}\r\n          onTouchEnd={handleTouchEnd}\r\n        >\r\n          <div className={styles[\"list-header\"]}>\r\n            <div className={styles[\"play-mode\"]}>\r\n              <span>播放列表</span>\r\n            </div>\r\n          </div>\r\n          <div className={styles[\"list-scroll-wrap\"]}>\r\n            <Scroll onScroll={handleScroll}>\r\n              <ul>\r\n                {songList.map((item, idx) => {\r\n                  return (\r\n                    <li\r\n                      key={item.id}\r\n                      className={classNames(\r\n                        styles[\"song-item\"],\r\n                        index === idx && styles[\"active\"]\r\n                      )}\r\n                    >\r\n                      <p>\r\n                        <span>\r\n                          {idx === index && <Icon icon=\"play-circle\"></Icon>}\r\n                        </span>\r\n\r\n                        {`${item.name} - ${formatSingerName(item.singers)} `}\r\n                      </p>\r\n                      <Button\r\n                        className={styles[\"delete\"]}\r\n                        btnType=\"primary\"\r\n                        onClick={(e) => {\r\n                          handleDeleteClick(e, idx);\r\n                        }}\r\n                      >\r\n                        <Icon icon=\"trash\"></Icon>\r\n                      </Button>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </Scroll>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default memo(SongList);\r\n","import { Button, Icon } from \"collin-ui\";\r\nimport React, {\r\n  BaseSyntheticEvent,\r\n  FC,\r\n  memo,\r\n  ReactEventHandler,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { StoreState } from \"../../store\";\r\nimport { Song } from \"../../typings\";\r\nimport { formatSongUrl } from \"../../utils/format\";\r\nimport FullscreenPlayer from \"./FullscreenPlayer\";\r\nimport styles from \"./index.module.scss\";\r\nimport MiniPlayer from \"./MiniPlayer\";\r\nimport SongList from \"./SongList\";\r\nimport {\r\n  changeCurrentIndexAction,\r\n  changePlayStatusAction,\r\n} from \"./store/actions\";\r\n\r\nexport type handleProgressChange = (percent: number) => void;\r\n\r\nconst Player: FC = () => {\r\n  const { curIdx, songList, status, showSongList, fullscreen } = useSelector(\r\n    (state: StoreState) => ({\r\n      curIdx: state.player.currentIndex,\r\n      songList: state.player.songList,\r\n      status: state.player.playStatus,\r\n      showSongList: state.player.showSongList,\r\n      fullscreen: state.player.fullScreen,\r\n    })\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const [curSong, setCurSong] = useState<Song | null>(null);\r\n  const [currentTime, setCurrentTime] = useState<number>(0),\r\n    [duration, setDuration] = useState<number>(0),\r\n    [percent, setPercent] = useState<number>(0);\r\n\r\n  /**\r\n   * 更新当前时间\r\n   * @param {Event} e\r\n   */\r\n  const handleUpdateTime: ReactEventHandler<HTMLAudioElement> = (\r\n    e: BaseSyntheticEvent\r\n  ): void => {\r\n    setCurrentTime(e.target.currentTime);\r\n    const per: number = isNaN(e.target.currentTime / duration)\r\n      ? 0\r\n      : (currentTime / duration) * 100;\r\n    setPercent(per);\r\n  };\r\n\r\n  /**\r\n   * 控制进度条\r\n   * @param {Number} 进度条百分比\r\n   */\r\n  const handleProgressChange: handleProgressChange = useCallback(\r\n    (percent: number): void => {\r\n      console.log(percent);\r\n      const newTime: number = percent * duration;\r\n      setCurrentTime(newTime);\r\n      audioRef.current!.currentTime = newTime;\r\n      !status && changePlayStatusAction(true);\r\n    },\r\n    [duration]\r\n  );\r\n  useEffect(() => {\r\n    if (curIdx < 0 || songList.length < 1) {\r\n      return;\r\n    }\r\n    const newSong = songList[curIdx];\r\n    setCurSong((preSong) => {\r\n      return preSong?.id === newSong.id ? preSong : newSong;\r\n    });\r\n    setCurrentTime(0);\r\n    setDuration(newSong.dt / 1000 || 0);\r\n  }, [songList, curIdx]);\r\n\r\n  /**\r\n   * 监听歌曲变化\r\n   */\r\n  useEffect(() => {\r\n    const audioDom = audioRef.current;\r\n    if (curSong && audioDom) {\r\n      audioDom.src = formatSongUrl(curSong.id);\r\n      dispatch(changePlayStatusAction(true));\r\n    }\r\n  }, [curSong]);\r\n\r\n  /**\r\n   * 监听歌曲状态\r\n   */\r\n  useEffect(() => {\r\n    const audioDom = audioRef.current;\r\n    if (audioDom) {\r\n      if (status) {\r\n        audioDom.play();\r\n      } else {\r\n        audioDom.pause();\r\n      }\r\n    }\r\n  }, [status]);\r\n\r\n  const handleEnded = () => {\r\n    console.log(\"end\");\r\n    dispatch(changeCurrentIndexAction(curIdx + 1));\r\n  };\r\n\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n  return (\r\n    <div className=\"player\">\r\n      <MiniPlayer song={songList[curIdx]} playStatus={status} />\r\n      <audio\r\n        autoPlay\r\n        ref={audioRef}\r\n        onTimeUpdate={handleUpdateTime}\r\n        onEnded={handleEnded}\r\n      ></audio>\r\n      {showSongList && <SongList index={curIdx} songList={songList}></SongList>}\r\n      {curSong && (\r\n        <FullscreenPlayer\r\n          onProgressChange={handleProgressChange}\r\n          status={status}\r\n          curIdx={curIdx}\r\n          fullscreen={fullscreen}\r\n          curSong={curSong}\r\n          percent={percent}\r\n        ></FullscreenPlayer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Player);\r\n","import React, { FC, memo, useCallback, useEffect, useRef } from \"react\";\r\nimport styles from \"./index.module.scss\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { StoreState } from \"../../store\";\r\nimport { Alert } from \"collin-ui\";\r\nimport { toggleToastAction } from \"../../store/actions\";\r\nconst Toast: FC = () => {\r\n  const { showToast, toastText = \"\" } = useSelector((state: StoreState) => ({\r\n    showToast: state.toast.showToast,\r\n    toastText: state.toast.toastText,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  const hideToast = useCallback(() => {\r\n    dispatch(toggleToastAction(false));\r\n  }, []);\r\n  const timer = useRef<NodeJS.Timeout | null>(null);\r\n  useEffect(() => {\r\n    if (showToast) {\r\n      timer.current = setTimeout(() => {\r\n        hideToast();\r\n      }, 2000);\r\n      return () => {\r\n        clearTimeout(Number(timer.current));\r\n        timer.current = null;\r\n      };\r\n    }\r\n  }, [showToast, hideToast]);\r\n  return (\r\n    <CSSTransition timeout={200} unmountOnExit classNames=\"drop\" in={showToast}>\r\n      <Alert\r\n        title={toastText}\r\n        className={styles[\"toast\"]}\r\n        onClose={hideToast}\r\n      ></Alert>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default memo(Toast);\r\n","import React, { FC } from \"react\";\r\nimport { renderRoutes, RouteConfigComponentProps } from \"react-router-config\";\r\nimport Header from \"../../components/Header\";\r\nimport NavTabs from \"../../components/NavTabs\";\r\nimport Player from \"../../components/Player\";\r\nimport Toast from \"../../components/Toast\";\r\n\r\nconst HomeLayout: FC<RouteConfigComponentProps> = ({ route }) => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <NavTabs />\r\n      {renderRoutes(route?.routes)}\r\n      <Toast />\r\n      <Player />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeLayout;\r\n","export default __webpack_public_path__ + \"static/media/music.6275a6ce.png\";","import BScroll, { BScrollInstance, Options } from \"better-scroll\";\r\nimport React, {\r\n  FC,\r\n  forwardRef,\r\n  memo,\r\n  ReactNode,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nexport interface Position {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface ScrollProps extends Options {\r\n  ref?: any;\r\n  direction?: \"horizontal\" | \"vertical\";\r\n  click?: boolean;\r\n  bounceTop?: boolean;\r\n  bounceBottom?: boolean;\r\n  bounceLeft?: boolean;\r\n  bounceRight?: boolean;\r\n  pullDownLoading?: boolean;\r\n  pullUpLoading?: boolean;\r\n  onScroll?: (pos: Position) => void;\r\n  onPullDown?: () => void;\r\n  onPullUp?: () => void;\r\n  children?: ReactNode;\r\n}\r\n\r\nexport interface ScrollInstance {\r\n  refresh: () => void;\r\n  getBScroll: () => BScrollInstance | undefined;\r\n}\r\n\r\nconst Scroll: FC<ScrollProps> = forwardRef(\r\n  (\r\n    {\r\n      direction = \"vertical\",\r\n      click = true,\r\n      children,\r\n      bounceTop = true,\r\n      bounceBottom = true,\r\n      bounceLeft = true,\r\n      bounceRight = true,\r\n      pullDownLoading = false,\r\n      pullUpLoading = false,\r\n      onScroll,\r\n      onPullDown = () => {},\r\n      onPullUp = () => {},\r\n      ...restProps\r\n    },\r\n    ref\r\n  ) => {\r\n    const [bScroll, setBScroll] = useState<BScrollInstance | null>(null);\r\n    const scrollRef = useRef<HTMLDivElement>(null);\r\n    /**\r\n     * 初始化scroll\r\n     */\r\n    useEffect(() => {\r\n      let scroll = new BScroll(scrollRef.current!, {\r\n        click: click,\r\n        probeType: 3,\r\n        scrollX: direction === \"horizontal\",\r\n        scrollY: direction === \"vertical\",\r\n        tap: \"tap\",\r\n        bounce: {\r\n          top: bounceTop,\r\n          bottom: bounceBottom,\r\n          left: bounceLeft,\r\n          right: bounceRight,\r\n        },\r\n        ...restProps,\r\n      });\r\n\r\n      setBScroll(scroll);\r\n      return () => {\r\n        setBScroll(null);\r\n      };\r\n    }, []);\r\n\r\n    /**\r\n     * 通过 ref 暴露组件方法\r\n     */\r\n    useImperativeHandle(ref, (): ScrollInstance => {\r\n      return {\r\n        refresh() {\r\n          if (bScroll) {\r\n            bScroll.refresh();\r\n            bScroll.scrollTo(0, 0);\r\n          }\r\n        },\r\n        getBScroll() {\r\n          if (bScroll) {\r\n            return bScroll;\r\n          }\r\n        },\r\n      };\r\n    });\r\n\r\n    /**\r\n     * 监听onScroll\r\n     */\r\n    useEffect(() => {\r\n      if (onScroll && bScroll) {\r\n        bScroll.on(\"scroll\", onScroll);\r\n        return () => {\r\n          bScroll.off(\"scroll\");\r\n        };\r\n      }\r\n    }, [bScroll, onScroll]);\r\n\r\n    /**\r\n     * 刷新scroll\r\n     */\r\n    useEffect(() => {\r\n      bScroll && bScroll.refresh();\r\n    });\r\n    return (\r\n      <div className={styles[\"scroll-wrapper\"]} ref={scrollRef}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default memo(Scroll);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll-wrapper\":\"Scroll_scroll-wrapper__3fgDG\"};","import { Singer } from \"../typings\";\r\n\r\n/**\r\n * 格式化数量\r\n * @param count\r\n */\r\nexport const formatCount = (count: number): number | string | undefined => {\r\n  if (count < 0) return;\r\n  if (count >= 100000000) {\r\n    return (count / 100000000).toFixed(1) + \"亿\";\r\n  }\r\n  if (count >= 10000) {\r\n    return (count / 10000).toFixed(1) + \"万\";\r\n  }\r\n  return count;\r\n};\r\n\r\n/**\r\n * 给小于10的数字补上0\r\n * @param num\r\n */\r\nexport const formatNumber = (num: number): string | number => {\r\n  const numStr = num.toString();\r\n  return numStr[1] ? num : \"0\" + num;\r\n};\r\n\r\n/**\r\n * 格式化歌手名字\r\n * @param singerList\r\n */\r\nexport const formatSingerName = (singerList: Singer[]): string => {\r\n  return singerList.map((item: Singer): string => item.name).join(\" / \");\r\n};\r\n\r\n/**\r\n * 组装歌曲的url\r\n * @param id\r\n */\r\nexport const formatSongUrl = (id: number): string => {\r\n  return `https://music.163.com/song/media/outer/url?id=${id}.mp3`;\r\n};\r\n\r\n/**\r\n * 转换歌曲播放时间\r\n * @param interval\r\n */\r\nexport const formatPlayTime = (interval: number): string => {\r\n  interval = interval | 0; // 向下取整\r\n  const minute = (interval / 60) | 0;\r\n  const second = (interval % 60).toString().padStart(2, \"0\");\r\n  return `${minute}:${second}`;\r\n};\r\n"],"sourceRoot":""}