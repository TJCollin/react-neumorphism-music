{"version":3,"sources":["store/actions.ts","components/SongList/index.module.scss","components/SongList/index.tsx","utils/tools.ts","pages/Singer/index.module.scss","pages/Singer/index.tsx","assets/images/music.png","components/Scroll/index.tsx","components/Scroll/index.module.scss","utils/format.ts","components/Loading/index.tsx","components/Loading/index.module.scss"],"names":["toggleToastAction","show","payload","type","TOGGLE_TOAST","module","exports","SongList","forwardRef","props","ref","recommendSongs","curId","dispatch","useDispatch","handleSongClick","idx","data","actions","changeSongListAction","JSON","parse","stringify","changeCurrentIndexAction","listRef","useRef","useImperativeHandle","play","getListDom","current","className","styles","map","songItem","debounce","placeholder","src","require","default","alt","width","height","album","picUrl","name","formatSingerName","singers","onClick","icon","id","memo","Singer","params","useParams","history","useHistory","useSelector","state","loading","singer","singerDetail","curIdx","player","currentIndex","songList","status","playStatus","useState","setShow","wrapperStyle","flex","overflow","marginBottom","useEffect","getSingerDetailAction","Number","timeout","in","unmountOnExit","classNames","onExited","goBack","appear","style","onScroll","forceCheck","changePlayStatusAction","backgroundImage","hotSongs","Scroll","direction","click","children","bounceTop","bounceBottom","bounceLeft","bounceRight","pullDownLoading","pullUpLoading","restProps","onPullDown","onPullUp","bScroll","setBScroll","scrollRef","scroll","BScroll","probeType","scrollX","scrollY","tap","bounce","top","bottom","left","right","refresh","scrollTo","getBScroll","on","off","singerList","item","join","formatSongUrl","Loading"],"mappings":"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","file":"static/js/7.d1cf25f9.chunk.js","sourcesContent":["import { TOGGLE_TOAST } from \"./actionTypes\";\r\n\r\nexport const toggleToastAction = (\r\n  show: boolean,\r\n  payload: string = \"暂未开发\"\r\n) => {\r\n  return {\r\n    type: TOGGLE_TOAST,\r\n    payload: payload,\r\n    show: show,\r\n  };\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"songs-wrapper\":\"SongList_songs-wrapper__2fAek\",\"wrapper-content\":\"SongList_wrapper-content__2B7ek\",\"card\":\"SongList_card__NRiC1\",\"content\":\"SongList_content__3sHfy\",\"img\":\"SongList_img__Byt7u\",\"info\":\"SongList_info__BU7Zi\",\"song-info\":\"SongList_song-info__7-m8I\",\"song-name\":\"SongList_song-name__1ruDz\",\"play-button\":\"SongList_play-button__2OAVn\"};","import { Button, Card, CardContent, Icon } from \"collin-ui\";\r\nimport React, { FC, forwardRef, memo, useImperativeHandle } from \"react\";\r\nimport { Song } from \"../../typings\";\r\nimport styles from \"./index.module.scss\";\r\nimport { actions } from \"../Player/store\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport { deepClone } from \"../../utils/tools\";\r\nimport { formatSingerName } from \"../../utils/format\";\r\nimport { useRef } from \"react\";\r\n\r\nexport interface SongListProps {\r\n  recommendSongs: Song[];\r\n  curId: number;\r\n}\r\n\r\nexport interface SongListInstance {\r\n  play: (idx: number) => void;\r\n  getListDom?: () => HTMLDivElement | null;\r\n}\r\n\r\nconst SongList = forwardRef((props: SongListProps, ref) => {\r\n  const { recommendSongs, curId } = props;\r\n  const dispatch = useDispatch();\r\n  const handleSongClick = (idx: number) => {\r\n    dispatch(actions.changeSongListAction(deepClone(recommendSongs)));\r\n    dispatch(actions.changeCurrentIndexAction(idx));\r\n  };\r\n  const listRef = useRef<HTMLDivElement>(null);\r\n\r\n  useImperativeHandle(ref, (): SongListInstance => {\r\n    return {\r\n      play: (idx) => {\r\n        handleSongClick(idx);\r\n      },\r\n      getListDom: () => {\r\n        return listRef.current;\r\n      },\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className={styles[\"songs-wrapper\"]} ref={listRef}>\r\n      <div className={styles[\"wrapper-content\"]}>\r\n        {recommendSongs.map((songItem, idx) => {\r\n          return (\r\n            <Card className={styles[\"card\"]} key={songItem.id}>\r\n              <CardContent className={styles[\"content\"]}>\r\n                <div className={styles[\"img\"]}>\r\n                  <LazyLoad\r\n                    debounce={500}\r\n                    placeholder={\r\n                      <img\r\n                        src={require(\"../../assets/images/music.png\").default}\r\n                        alt=\"music\"\r\n                        width=\"50\"\r\n                        height=\"100%\"\r\n                        className={styles[\"img\"]}\r\n                      />\r\n                    }\r\n                  >\r\n                    <img\r\n                      src={songItem.album.picUrl}\r\n                      alt=\"\"\r\n                      className={styles[\"img\"]}\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                    />\r\n                  </LazyLoad>\r\n                </div>\r\n                <div className={styles[\"info\"]}>\r\n                  <p className={styles[\"song-name\"]}>{songItem.name}</p>\r\n                  <p className={styles[\"song-info\"]}>\r\n                    {`${formatSingerName(songItem.singers)} - ${\r\n                      songItem.album.name\r\n                    }`}\r\n                  </p>\r\n                </div>\r\n                <Button\r\n                  className={styles[\"play-button\"]}\r\n                  onClick={() => {\r\n                    handleSongClick(idx);\r\n                  }}\r\n                >\r\n                  <Icon\r\n                    icon={songItem.id === curId ? \"podcast\" : \"play\"}\r\n                  ></Icon>\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default memo(SongList);\r\n","export const deepClone = <T = any>(data: T): T => {\r\n  return JSON.parse(JSON.stringify(data));\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"album-wrap\":\"Singer_album-wrap__1GYHe\",\"header\":\"Singer_header__2y3HR\",\"singer-name\":\"Singer_singer-name__1UHRM\",\"detail-wrap\":\"Singer_detail-wrap__3e_F1\",\"detail-button\":\"Singer_detail-button__8P0nt\",\"img-card\":\"Singer_img-card__1aMXs\",\"content\":\"Singer_content__2f6MR\",\"songs-wrap\":\"Singer_songs-wrap__KTrd3\"};","import { Button, Card, CardContent, Icon } from \"collin-ui\";\r\nimport React, { FC, memo, useEffect, useState } from \"react\";\r\nimport { forceCheck } from \"react-lazyload\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Scroll from \"../../components/Scroll\";\r\nimport SongList, { SongListInstance } from \"../../components/SongList\";\r\nimport Loading from \"../../components/Loading\";\r\nimport { StoreState } from \"../../store\";\r\nimport styles from \"./index.module.scss\";\r\nimport { getSingerDetailAction } from \"./store/actions\";\r\nimport { toggleToastAction } from \"../../store/actions\";\r\nimport { useRef } from \"react\";\r\nimport { changePlayStatusAction } from \"../../components/Player/store/actions\";\r\n\r\nexport interface SingerRouteParams {\r\n  id: string;\r\n}\r\n\r\nconst Singer = () => {\r\n  const params = useParams<SingerRouteParams>();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const listRef = useRef<SongListInstance>(null);\r\n  const { loading, singerDetail, curIdx, songList, status } = useSelector(\r\n    (state: StoreState) => ({\r\n      loading: state.singer.loading,\r\n      singerDetail: state.singer.singerDetail,\r\n      curIdx: state.player.currentIndex,\r\n      songList: state.player.songList,\r\n      status: state.player.playStatus,\r\n    })\r\n  );\r\n  const [show, setShow] = useState<boolean>(true);\r\n  const goBack = () => {\r\n    setShow(false);\r\n  };\r\n  const wrapperStyle = {\r\n    flex: 1,\r\n    overflow: \"hidden\",\r\n    marginBottom: curIdx > -1 ? \"60px\" : 0,\r\n  };\r\n  const handleMoreClick = () => {\r\n    dispatch(toggleToastAction(true, \"功能暂未开发哟\"));\r\n  };\r\n  const handlePlayClick = () => {\r\n    if (status) {\r\n      dispatch(changePlayStatusAction(false));\r\n    } else {\r\n      listRef.current?.play(0);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 获取歌手详情数据\r\n   */\r\n  useEffect((): void => {\r\n    const id = params.id;\r\n    dispatch(getSingerDetailAction(Number(id)));\r\n  }, []);\r\n  return (\r\n    <CSSTransition\r\n      timeout={300}\r\n      in={show}\r\n      unmountOnExit\r\n      classNames=\"fly\"\r\n      onExited={history.goBack}\r\n      appear\r\n    >\r\n      {\r\n        <div className={styles[\"album-wrap\"]}>\r\n          <div className={styles[\"header\"]} onClick={goBack}>\r\n            <Icon icon=\"chevron-left\"></Icon>\r\n            <p className={styles[\"singer-name\"]}>{singerDetail?.name}</p>\r\n          </div>\r\n          {!loading && (\r\n            <div style={wrapperStyle}>\r\n              {singerDetail && (\r\n                <Scroll onScroll={forceCheck}>\r\n                  <div>\r\n                    <div className={styles[\"detail-wrap\"]}>\r\n                      <Button\r\n                        className={styles[\"detail-button\"]}\r\n                        onClick={handlePlayClick}\r\n                      >\r\n                        <Icon icon={status ? \"pause\" : \"play\"}></Icon>\r\n                      </Button>\r\n                      <Card className={styles[\"img-card\"]}>\r\n                        <CardContent\r\n                          className={styles[\"content\"]}\r\n                          style={{\r\n                            backgroundImage: `url(${singerDetail.picUrl})`,\r\n                          }}\r\n                        ></CardContent>\r\n                      </Card>\r\n                      <Button\r\n                        className={styles[\"detail-button\"]}\r\n                        onClick={handleMoreClick}\r\n                      >\r\n                        <Icon icon=\"ellipsis-h\"></Icon>\r\n                      </Button>\r\n                    </div>\r\n                    <div className={styles[\"songs-wrap\"]}>\r\n                      <SongList\r\n                        recommendSongs={singerDetail.hotSongs!}\r\n                        ref={listRef}\r\n                        curId={curIdx > -1 ? songList[curIdx].id : -1}\r\n                      ></SongList>\r\n                    </div>\r\n                  </div>\r\n                </Scroll>\r\n              )}\r\n            </div>\r\n          )}\r\n          {loading && <Loading></Loading>}\r\n        </div>\r\n      }\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default memo(Singer);\r\n","export default __webpack_public_path__ + \"static/media/music.6275a6ce.png\";","import BScroll, { BScrollInstance, Options } from \"better-scroll\";\r\nimport React, {\r\n  FC,\r\n  forwardRef,\r\n  memo,\r\n  ReactNode,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nexport interface Position {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface ScrollProps extends Options {\r\n  ref?: any;\r\n  direction?: \"horizontal\" | \"vertical\";\r\n  click?: boolean;\r\n  bounceTop?: boolean;\r\n  bounceBottom?: boolean;\r\n  bounceLeft?: boolean;\r\n  bounceRight?: boolean;\r\n  pullDownLoading?: boolean;\r\n  pullUpLoading?: boolean;\r\n  onScroll?: (pos: Position) => void;\r\n  onPullDown?: () => void;\r\n  onPullUp?: () => void;\r\n  children?: ReactNode;\r\n}\r\n\r\nexport interface ScrollInstance {\r\n  refresh: () => void;\r\n  getBScroll: () => BScrollInstance | undefined;\r\n}\r\n\r\nconst Scroll: FC<ScrollProps> = forwardRef(\r\n  (\r\n    {\r\n      direction = \"vertical\",\r\n      click = true,\r\n      children,\r\n      bounceTop = true,\r\n      bounceBottom = true,\r\n      bounceLeft = true,\r\n      bounceRight = true,\r\n      pullDownLoading = false,\r\n      pullUpLoading = false,\r\n      onScroll,\r\n      onPullDown = () => {},\r\n      onPullUp = () => {},\r\n      ...restProps\r\n    },\r\n    ref\r\n  ) => {\r\n    const [bScroll, setBScroll] = useState<BScrollInstance | null>(null);\r\n    const scrollRef = useRef<HTMLDivElement>(null);\r\n    /**\r\n     * 初始化scroll\r\n     */\r\n    useEffect(() => {\r\n      let scroll = new BScroll(scrollRef.current!, {\r\n        click: click,\r\n        probeType: 3,\r\n        scrollX: direction === \"horizontal\",\r\n        scrollY: direction === \"vertical\",\r\n        tap: \"tap\",\r\n        bounce: {\r\n          top: bounceTop,\r\n          bottom: bounceBottom,\r\n          left: bounceLeft,\r\n          right: bounceRight,\r\n        },\r\n        ...restProps,\r\n      });\r\n\r\n      setBScroll(scroll);\r\n      return () => {\r\n        setBScroll(null);\r\n      };\r\n    }, []);\r\n\r\n    /**\r\n     * 通过 ref 暴露组件方法\r\n     */\r\n    useImperativeHandle(ref, (): ScrollInstance => {\r\n      return {\r\n        refresh() {\r\n          if (bScroll) {\r\n            bScroll.refresh();\r\n            bScroll.scrollTo(0, 0);\r\n          }\r\n        },\r\n        getBScroll() {\r\n          if (bScroll) {\r\n            return bScroll;\r\n          }\r\n        },\r\n      };\r\n    });\r\n\r\n    /**\r\n     * 监听onScroll\r\n     */\r\n    useEffect(() => {\r\n      if (onScroll && bScroll) {\r\n        bScroll.on(\"scroll\", onScroll);\r\n        return () => {\r\n          bScroll.off(\"scroll\");\r\n        };\r\n      }\r\n    }, [bScroll, onScroll]);\r\n\r\n    /**\r\n     * 刷新scroll\r\n     */\r\n    useEffect(() => {\r\n      bScroll && bScroll.refresh();\r\n    });\r\n    return (\r\n      <div className={styles[\"scroll-wrapper\"]} ref={scrollRef}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default memo(Scroll);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll-wrapper\":\"Scroll_scroll-wrapper__3fgDG\"};","import { Singer } from \"../typings\";\r\n\r\n/**\r\n * 格式化数量\r\n * @param count\r\n */\r\nexport const formatCount = (count: number): number | string | undefined => {\r\n  if (count < 0) return;\r\n  if (count >= 100000000) {\r\n    return (count / 100000000).toFixed(1) + \"亿\";\r\n  }\r\n  if (count >= 10000) {\r\n    return (count / 10000).toFixed(1) + \"万\";\r\n  }\r\n  return count;\r\n};\r\n\r\n/**\r\n * 给小于10的数字补上0\r\n * @param num\r\n */\r\nexport const formatNumber = (num: number): string | number => {\r\n  const numStr = num.toString();\r\n  return numStr[1] ? num : \"0\" + num;\r\n};\r\n\r\n/**\r\n * 格式化歌手名字\r\n * @param singerList\r\n */\r\nexport const formatSingerName = (singerList: Singer[]): string => {\r\n  return singerList.map((item: Singer): string => item.name).join(\" / \");\r\n};\r\n\r\n/**\r\n * 组装歌曲的url\r\n * @param id\r\n */\r\nexport const formatSongUrl = (id: number): string => {\r\n  return `https://music.163.com/song/media/outer/url?id=${id}.mp3`;\r\n};\r\n\r\n/**\r\n * 转换歌曲播放时间\r\n * @param interval\r\n */\r\nexport const formatPlayTime = (interval: number): string => {\r\n  interval = interval | 0; // 向下取整\r\n  const minute = (interval / 60) | 0;\r\n  const second = (interval % 60).toString().padStart(2, \"0\");\r\n  return `${minute}:${second}`;\r\n};\r\n","import { Icon } from \"collin-ui\";\r\nimport styles from \"./index.module.scss\";\r\nimport React, { FC, memo } from \"react\";\r\n\r\nconst Loading: FC = () => {\r\n  return (\r\n    <div className={styles[\"loading-wrap\"]}>\r\n      <Icon icon=\"spinner\" className={styles[\"loading\"]}></Icon>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Loading);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-wrap\":\"Loading_loading-wrap__3PMkp\",\"loading\":\"Loading_loading__30w8P\",\"myScale\":\"Loading_myScale__3XULs\"};"],"sourceRoot":""}